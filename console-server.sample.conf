[service]
ip = "0.0.0.0"
port = 8080
wsproxy.url = ""

# If you need ssl-enabled server, fill these configurations.
#ssl-enabled = true
#ssl-cert = 
#ssl-privkey =

# Set or enable it when using nginx proxy
#force-endpoint-protocol = "https"

# "webconsole" mode is for serving "backend.ai-console" PWA,
# where non-existent URLs are fall-back to "index.html"
# and "config.ini" is generated on the fly.
# "static" mode is for serving the static directory as-is,
# without any fallback or hooks.
mode = "webconsole"
# Enable signup feature support.
enable_signup = false
# Let anonymous user can request an email with a link to change password.
allow_anonymous_change_password = false
# Allow users to see user's current project resource monitor
allow_project_resource_monitor = false
# Allow users to change signin mode between ID/Password and IAM mode
allow_change_signin_mode = false

[resources]
# Display "Open port to public" checkbox in the app launcher.
# If checked, the app will be accessible by anyone who has network to the URL.
open_port_to_public = false
# Maximum CPU cores allowed per session (int)
max_cpu_cores_per_session = 64
# Maximum CUDA devices allowed per session (int)
max_cuda_devices_per_session = 16
# Maximum shared memory allowed per session (float)
max_shm_per_session = 2
# Maximum per-file upload size (bytes)
max_file_upload_size = 4294967296

[ui]
brand = "Lablup Cloud"
# default_environment = 'index.docker.io/lablup/python-tensorflow'
# Comma-separated sidebar menu pages
#menu_blocklist = "statistics"

[api]
domain = "default"
endpoint = "https://api.backend.ai"
text = "Backend.AI Cloud"
ssl-verify = true

[session]
redis.host = "localhost"
redis.port = 6379
# redis.db = 0
# redis.password = "mysecret"
max_age = 2592000  # 30 days
flush_on_startup = false

# Add a manually configured license information shown in the UI.
#[license]
#edition = "Open Source"
#valid_since = ""
#valid_until = ""

# vim: ft=toml
